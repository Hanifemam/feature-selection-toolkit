import pandas as pd


def get_method_characteristics():
    """
    Returns a DataFrame with detailed characteristics of each feature selection method.
    """

    methods_data = [
        {
            "method": "spearman",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_equal_covariance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": True,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_binary_variables": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Captures monotonic relationships. Suitable for numerical or ordinal target variables.",
        },
        {
            "method": "kendall",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": True,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_binary_variables": False,
            "assumption_equal_covariance": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": False,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "More robust to outliers than Spearman. Good for ordinal data and small samples.",
        },
        {
            "method": "pearson",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": True,
            "assumption_linear_relationship": True,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Suitable for regression problems with continuous and normally distributed features and target. Not appropriate for classification problems.",
        },
        {
            "method": "mwu",  # Mann-Whitney U test
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Suitable for binary classification. Non-parametric test.",
        },
        {
            "method": "kruskal",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Suitable for multi-class classification. Non-parametric test.",
        },
        {
            "method": "ks",  # Kolmogorov-Smirnov test
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": True,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Suitable for binary classification. Tests whether two samples come from the same distribution.",
        },
        {
            "method": "chi2",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": True,
            "assumption_categorical_data": True,
            "assumption_counts": True,
            "assumption_none": False,
            "assumption_categorical_data": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": True,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": False,
            "works_with_clustering": True,
            "notes": "Suitable for categorical features and targets. Tests independence between feature and target.",
        },
        {
            "method": "mi",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": True,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": True,
            "notes": "Captures non-linear relationships. No assumptions about data distribution.",
        },
        {
            "method": "rf", 
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # After encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Encoding categorical variables
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_random_forest": True,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Considers feature interactions. Good for tree-based models.",
        },
        {
            "method": "lasso",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,  # For logistic regression
            "target_type_multiclass": False,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": True,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization required
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Features should be standardized. Assumes linear relationships. Encourages sparsity.",
        },
        {
            "method": "permutation",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # After encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Model-agnostic. Requires a trained model. Computationally intensive.",
        },
        {
            "method": "rfe_worst",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,  # Depends on the estimator used
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": False,  # Computationally intensive for large datasets
            "handles_nonlinear": True,  # If the estimator handles nonlinearities
            "suitable_for_clustering": False,
            "transformation_required": True,  # Depending on the estimator
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": False,  # Typically not used with RFE
            "works_with_decision_trees": True,
            "works_with_naive_bayes": False,  # Not suitable
            "works_with_knn": False,  # Not suitable
            "works_with_clustering": False,
            "notes": "Recursive Feature Elimination uses an estimator to select features by recursively considering smaller sets. Estimator must provide feature importance or coefficients.",
        },
        {
            "method": "rfe_best",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,  # Depends on the estimator used
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": False,  # Computationally intensive for large datasets
            "handles_nonlinear": True,  # If the estimator handles nonlinearities
            "suitable_for_clustering": False,
            "transformation_required": True,  # Depending on the estimator
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": False,  # Typically not used with RFE
            "works_with_decision_trees": True,
            "works_with_naive_bayes": False,  # Not suitable
            "works_with_knn": False,  # Not suitable
            "works_with_clustering": False,
            "notes": "Recursive Feature Elimination uses an estimator to select features by recursively considering smaller sets. Estimator must provide feature importance or coefficients.",
        },
        {
            "method": "cohens_d",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": True,
            "assumption_independent_samples": True,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Measures effect size between two groups. Assumes normal distribution and equal variances.",
        },
        {
            "method": "odds_ratio",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_counts": True,
            "assumption_independent_samples": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Used with categorical data. Interpretable effect size showing the strength of association.",
        },
        {
            "method": "cramers_v",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_categorical_data": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,  # Requires sufficient data per category
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": True,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_random_forest": True,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": True,
            "notes": "Used for categorical data. Measures the strength of association between two nominal variables.",
        },
        {
            "method": "relief",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_independent_samples": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Estimates feature importance based on instance-based learning. Handles feature interactions.",
        },
        {
            "method": "mic",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # appropriately encoded
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,  # appropriately encoded
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": False,
            "sample_size_large": True,  # Performs better with large datasets
            "handles_nonlinear": True,
            "suitable_for_clustering": False,  # Primarily supervised
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Detects a wide range of associations. Computationally intensive for large datasets.",
        },
        {
            "method": "t_test",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,  # Comparing two groups
            "target_type_multiclass": False,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": False,
            "assumption_independent_samples": True,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": True,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Tests difference in means between two groups. Assumes normal distribution.",
        },
        {
            "method": "partial_correlation",
            "data_type_continuous": True,
            "data_type_ordinal": False,  # Requires numerical data
            "data_type_nominal": False,
            "data_type_binary": False,  # Binary variables can be problematic
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_linear_relationship": True,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Measures the linear relationship between two variables while controlling for the effect of other variables.",
        },
        {
            "method": "lars",  # Least Angle Regression
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_linear_relationship": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Efficient for high-dimensional data. Selects features in a forward stagewise manner.",
        },
        {
            "method": "iv_woe",
            "data_type_continuous": True,  # After binning
            "data_type_ordinal": True,
            "data_type_nominal": True,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,  # WOE is linear
            "suitable_for_clustering": False,
            "transformation_required": True,  # Binning and WOE encoding
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Calculates IV and WOE for categorical features in binary classification. Useful for variable selection and encoding.",
        },
        {
            "method": "pmi",  # Pointwise Mutual Information
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_counts": False,
            "assumption_categorical_data": True,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": True,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_neural_networks": False,
            "works_with_random_forest": True,
            "works_with_svm": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": True,
            "notes": "Measures the strength of association between categorical features and target. Suitable for discrete variables.",
        },
        {
            "method": "laplacian",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": False,
            "handles_nonlinear": True,
            "suitable_for_clustering": True,
            "transformation_required": True,  # Normalization required
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": True,
            "works_with_clustering": True,
            "notes": "Unsupervised feature selection method. Evaluates features according to their locality preserving power.",
        },
        {
            "method": "stability",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": True,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": "Depends on base model",
            "suitable_for_clustering": False,
            "transformation_required": "Depends on base model",
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_neural_networks": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Aggregates feature selection over multiple bootstrap samples. Improves robustness. Base model should be appropriate for data.",
        },
        {
            "method": "autoencoder_feature_selection",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": True,
            "transformation_required": True,  # Standardization required
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_neural_networks": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": True,
            "notes": "Uses autoencoder to learn feature representations. Importance derived from encoder weights.",
        },
        {
            "method": "anova",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": True,
            "assumption_linear_relationship": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Homogeneity of variances
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": True,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Tests whether means of different groups are equal. Assumes normal distribution and homogeneity of variance.",
        },
        {
            "method": "lda",  # Linear Discriminant Analysis
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": True,
            "assumption_equal_covariance": True,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Projects data to maximize class separability. Coefficients indicate feature importance.",
        },
        {
            "method": "pls",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_linear_relationship": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization required
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Projects predictors and response to a new space. Handles multicollinearity.",
        },
        {
            "method": "stepwise_regression",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_linear_relationship": True,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": False,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_neural_networks": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Iteratively adds or removes features based on statistical criteria. Computationally intensive.",
        },
        {
            "method": "point_biserial",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_linear_relationship": True,
            "assumption_normal_distribution": True,
            "assumption_independent_samples": True,
            "assumption_equal_variance": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Special case of Pearson correlation for binary target. Assumes continuous features are normally distributed.",
        },
        {
            "method": "vdm",  # Value Difference Metric
            "data_type_continuous": False,
            "data_type_ordinal": True,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": True,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Value Difference Metric used with categorical features. Measures feature predictive strength.",
        },
        {
            "method": "fishers_score",
            "data_type_continuous": True,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": True,  # compute score for each class
            "assumption_normal_distribution": True,
            "assumption_equal_variance": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Standardization recommended
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": True,
            "works_with_neural_networks": True,  # Both classification and regression
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Measures the ability of a feature to discriminate between classes. Assumes normal distribution.",
        },
        {
            "method": "cliffs_delta",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,
            "data_type_binary": False,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": False,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,  # Both classification and regression
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": False,
            "notes": "Non-parametric effect size measure. No assumptions about data distribution.",
        },
        {
            "method": "cfd",
            "data_type_continuous": True,
            "data_type_ordinal": True,
            "data_type_nominal": False,  # Requires encoding
            "data_type_binary": False,
            "target_type_continuous": True,
            "target_type_ordinal": True,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": True,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": True,
            "works_with_random_forest": True,
            "works_with_svm": True,
            "works_with_neural_networks": True,  # Both classification and regression
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": True,
            "works_with_clustering": True,
            "notes": "Computes distance correlation to capture linear and nonlinear relationships. Computationally intensive for large datasets.",
        },
        {
            "method": "fishers_exact",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_counts": True,  # Data in counts/frequencies
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": False,
            "sample_size_large": False,
            "handles_nonlinear": True,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Tests independence in a 2x2 contingency table. Suitable for small sample sizes and binary features.",
        },
        {
            "method": "phi_coefficient",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": False,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_binary_variables": True,
            "assumption_categorical_data": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": True,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": True,
            "works_with_naive_bayes": True,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Measures association between two binary variables. Similar to Pearson correlation for binary data.",
        },
        {
            "method": "anova_categorical",
            "data_type_continuous": False,
            "data_type_ordinal": True,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": True,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,  # Requires sufficient data per category
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Tests differences in target mean across categories of a feature. Suitable for categorical features and continuous target.",
        },
        {
            "method": "likelihood_ratio_test",
            "data_type_continuous": False,
            "data_type_ordinal": True,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": False,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": True,
            "target_type_multiclass": False,
            "assumption_independent_samples": True,
            "assumption_normal_distribution": False,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": True,  # Dummy encoding required
            "works_with_linear_regression": False,
            "works_with_logistic_regression": True,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Assesses the significance of adding a feature to a logistic regression model using the Likelihood Ratio Test.",
        },
        {
            "method": "eta_coefficient",
            "data_type_continuous": False,
            "data_type_ordinal": False,
            "data_type_nominal": True,
            "data_type_binary": True,
            "target_type_continuous": True,
            "target_type_ordinal": False,
            "target_type_nominal": False,
            "target_type_binary": False,
            "target_type_multiclass": False,
            "assumption_normal_distribution": True,
            "assumption_equal_variance": False,
            "assumption_linear_relationship": False,
            "assumption_monotonic_relationship": False,
            "assumption_independent_samples": False,
            "assumption_categorical_data": False,
            "assumption_counts": False,
            "assumption_none": False,
            "sample_size_small": False,
            "sample_size_medium": True,
            "sample_size_large": True,
            "handles_nonlinear": False,
            "suitable_for_clustering": False,
            "transformation_required": False,
            "works_with_linear_regression": True,
            "works_with_logistic_regression": False,
            "works_with_random_forest": False,
            "works_with_svm": False,
            "works_with_neural_networks": False,
            "works_with_decision_trees": False,
            "works_with_naive_bayes": False,
            "works_with_knn": False,
            "works_with_clustering": False,
            "notes": "Measures the strength of association between a categorical feature and a continuous target. Related to the proportion of variance explained.",
        },
    ]

    # Convert the list of dictionaries to a DataFrame
    df = pd.DataFrame(methods_data)

    # Set 'method' as the index
    df.set_index("method", inplace=True)

    # Replace NaN with False for any missing boolean values
    df.fillna(False, inplace=True)

    return df
